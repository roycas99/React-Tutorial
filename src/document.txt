if you missing node_module : run npm install
type emmit in vscode setting then go emit included language and then write js = jsreact
sfc = stateless function
inline style: style={{ color: "white, backgroundColor}}

click events: 
fire func with bracket it self invoke 
to pass argument on fire action u need to wrap into annymous function

USeState:
if something will change on time. use it.

id and key:
use id for list in react
and id for Dom 

#11 props.
they make easy to use content again.

<NameofPage, propName= name> // send prop
const nameofPage = ({ destruction the object})

#12 filter function: fires a callback function in each item of array. if return true it keeps element and if not it filter out

#13 useffect
it fire every  renders. good for data fetch. inside this hook we can access state component but do not do any change in state .it manages side-effect in functional react component.
if func component makes calculations that don't target the output value, then these calculations are named side-effects.
Examples of side-effects are fetch requests, manipulating DOM directly, using timer functions like setTimeout(), and more.
Put your side-effect logic into the callback function, then use the dependencies argument to control when you want the side-effect to run. 
qThat's the sole purpose of useEffect().

#15 use Effect dependencies
empty array = runs only one
[prop] = can be dependencies

# 16 & 17 Json server and fetching data 
to run: npx json-server --watch data/db.json --port 8000
end points: /blog GET = fetch all blogs
/blog/{id} Get - fetch a single blog

 {blogs && <BlogList  blogs={blogs} title="All blogs" handleDelete={handleDelete}/>} -- and conditinal if blog false dont bother other one 
 we get rid off handleDelete function.
#18
we have to show user that data is loading. using isPending and SetIsPending
#19
handling errors
there are many types of erros. like network err for example if server is down, but 
there is resources error like if the ending point is not exist u throw error and it will catch and display.
u can use Error USeState to display in screen

#20 making custom hook

we make file to fetch data. pass url to this function. 
{data: blogs = to name data as blogs}

#21 React Router
install : npm i react-router-dom
it goes node_module.
dom6: Switch is being replaced by Routers
tutoriol video is using dom5 but we using dom6

# 22 Router Path 
we  create.js page
we specif the path of routes by adding "exact" before path"

#23 Router Link
go to navbar.js and import Link for react router and change a tag to Link
and href into to .
this prevent sending request to server everytime we clink the navbar items
very fast

# 24 useEffect CleanUp
we have to go useFetch page.
background intro: if we are a page that is fetching data and we go another page
we got some error bc the page we came from is being unmounted
and that why cleaup is coming.
we gonna use CleanUP and abortController.

#25 Route Parameters
use useParam fro router-dom.
exact path="/blogs/:id" > this :id is router Parameter
