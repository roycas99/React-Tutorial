if you missing node_module : run npm install
type emmit in vscode setting then go emit included language and then write js = jsreact
sfc = stateless function
inline style: style={{ color: "white, backgroundColor}}

click events: 
fire func with bracket it self invoke 
to pass argument on fire action u need to wrap into annymous function

USeState:
if something will change on time. use it.

id and key:
use id for list in react
and id for Dom 

#11 props.
they make easy to use content again.

<NameofPage, propName= name> // send prop
const nameofPage = ({ destruction the object})

#12 filter function: fires a callback function in each item of array. if return true it keeps element and if not it filter out

#13 useffect
it fire every  renders. good for data fetch. inside this hook we can access state component but do not do any change in state .it manages side-effect in functional react component.
if func component makes calculations that don't target the output value, then these calculations are named side-effects.
Examples of side-effects are fetch requests, manipulating DOM directly, using timer functions like setTimeout(), and more.
Put your side-effect logic into the callback function, then use the dependencies argument to control when you want the side-effect to run. 
qThat's the sole purpose of useEffect().

#15 use Effect dependencies
empty array = runs only one
[prop] = can be dependencies

# 16 & 17 Json server and fetching data 
to run: npx json-server --watch data/db.json --port 8000
end points: /blog GET = fetch all blogs
/blog/{id} Get - fetch a single blog

 {blogs && <BlogList  blogs={blogs} title="All blogs" handleDelete={handleDelete}/>} -- and conditinal if blog false dont bother other one 
 we get rid off handleDelete function.
